--- models/huggingface_transformers/src/transformers/models/efficientformer/modeling_efficientformer.py.ori	2023-12-14 21:20:26.962052198 +0000
+++ models/huggingface_transformers/src/transformers/models/efficientformer/modeling_efficientformer.py.opt_2	2023-12-14 21:20:26.962052198 +0000
@@ -223,17 +223,16 @@
         out_features = out_features or in_features
         hidden_features = hidden_features or in_features
 
-        self.convolution1 = nn.Conv2d(in_features, hidden_features, 1)
+        from epoi.ops.torchscript_ops import FusedConv2dBatchNorm2d as torchscript_ops_FusedConv2dBatchNorm2d
+        self.conv_batchnorm = torchscript_ops_FusedConv2dBatchNorm2d()
         self.activation = ACT2FN[config.hidden_act]
         self.convolution2 = nn.Conv2d(hidden_features, out_features, 1)
         self.dropout = nn.Dropout(drop)
 
-        self.batchnorm_before = nn.BatchNorm2d(hidden_features, eps=config.batch_norm_eps)
         self.batchnorm_after = nn.BatchNorm2d(out_features, eps=config.batch_norm_eps)
 
     def forward(self, hidden_state: torch.Tensor) -> torch.Tensor:
-        hidden_state = self.convolution1(hidden_state)
-        hidden_state = self.batchnorm_before(hidden_state)
+        hidden_state = self.conv_batchnorm(hidden_state)
 
         hidden_state = self.activation(hidden_state)
         hidden_state = self.dropout(hidden_state)
